# .github/workflows/ci.yml
name: CI/CD

on:
  workflow_dispatch:
    inputs:
      bump_version:
        description: 'Bump version?'
        default: 'true'
        required: false
      run_tests:
        description: 'Run tests?'
        default: 'true'
        required: false
      publish_docker:
        description: 'Push to docker?'
        default: 'true'
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE_NAME: obsiflask:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set flags
        run: |
          echo "BUMP_VERSION=${{ github.event.inputs.bump_version }}" >> $GITHUB_ENV
          echo "RUN_TESTS=${{ github.event.inputs.run_tests }}" >> $GITHUB_ENV
          echo "PUBLISH_DOCKER=${{ github.event.inputs.publish_docker }}" >> $GITHUB_ENV

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Bump version
        if: env.BUMP_VERSION == 'true'
        run: |
          python obsiflask/version.py
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add obsiflask/version.py
          git commit -m "Bump version [ci skip]"
          GIT_VERSION=$(python -c 'from obsiflask.version import get_version; print(get_version(False, True)).strip()')
          git tag "v$GIT_VERSION"
          echo "Version bumped and tagged"

      - name: Build Docker image
        run: docker build -t $DOCKER_IMAGE_NAME .

      - name: Run tests in Docker
        if: env.RUN_TESTS == 'true'
        run: |
          docker run --rm $DOCKER_IMAGE_NAME bash /tests/run_docker_tests.sh
      
      - name: Log in to Docker Hub
        if: env.PUBLISH_DOCKER == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image
        if: env.PUBLISH_DOCKER == 'true'
        run: |
          DOCKER_VERSION=$(python -c 'from obsiflask.version import get_version; print(get_version(False)).strip()')
          docker tag obsiflask:latest bahleg13/obsiflask:latest
          docker tag obsiflask:latest bahleg13/obsiflask:"$DOCKER_VERSION"
          docker push bahleg13/obsiflask:latest
          echo "pushing to bahleg13/obsiflask:${DOCKER_VERSION}"
          docker push bahleg13/obsiflask:${DOCKER_VERSION}
          

      - name: Push version bump and tag
        if: env.BUMP_VERSION == 'true'
        run: |
          git push origin main --tags
